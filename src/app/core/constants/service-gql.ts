import {
  IDENTITY_CMS_CHANGE_PASSWORD,
  IDENTITY_GUEST_GET_OTP,
  IDENTITY_GUEST_SET_NEW_PASSWORD,
  IDENTITY_GUEST_VERIFY_OTP,
  IDENTITY_LOGOUT,
  IDENTITY_OFFICE_LOGIN,
  IDENTITY_PROFILE,
  IDENTITY_PROFILE_GUEST,
  IDENTITY_SYS_LOGIN,
  IDENTITY_SYS_REFRESH_TOKEN
} from "./gqlqueries/authentication-query";

import {
  CONVERSATION_CHECK_DETAIL,
  CONVERSATION_DELETE,
  CONVERSATION_DETAIL,
  CONVERSATION_EDIT_MESSAGE,
  CONVERSATION_GET_MESSAGE,
  CONVERSATION_GET_USER,
  CONVERSATION_GET_USER_DETAIL,
  CONVERSATION_GET_USER_FULL_ORG_CHART,
  CONVERSATION_GROUP_CREATE,
  CONVERSATION_GROUP_EDIT,
  CONVERSATION_LEAVE,
  CONVERSATION_LIST,
  CONVERSATION_REACTION_MESSAGE,
  CONVERSATION_READ_MESSAGE,
  CONVERSATION_SEARCH_MESSAGE,
  CONVERSATION_SEND_MESSAGE
} from "./gqlqueries/guest-chat-query";

import {
  STORAGE_ACTIVE_USING_FILE,
  STORAGE_DOCUMENT_GEN_LINK_UPLOAD,
  STORAGE_DOCUMENT_SUCCESS_UPLOAD,
  STORAGE_GEN_URL_UPLOAD,
  STORAGE_UPLOAD_FILE
} from "./gqlqueries/storage-query";


export const GQL_QUERIES = {
  authentication: {
    identitySysLogin: IDENTITY_SYS_LOGIN,
    identityOfficeLogin: IDENTITY_OFFICE_LOGIN,
    identityLogout: IDENTITY_LOGOUT,
    refreshToken: IDENTITY_SYS_REFRESH_TOKEN,
    identityProfileGuest: IDENTITY_PROFILE_GUEST,
    identityChangePassword: IDENTITY_CMS_CHANGE_PASSWORD,
    identityGuestGetOtp: IDENTITY_GUEST_GET_OTP,
    identityGuestVerifyOtp: IDENTITY_GUEST_VERIFY_OTP,
    identityGuestSetPassword: IDENTITY_GUEST_SET_NEW_PASSWORD,
  },

  storage: {
    uploadFile: STORAGE_UPLOAD_FILE,
    documentGenLinkUpload: STORAGE_DOCUMENT_GEN_LINK_UPLOAD,
    documentUploadFileSuccess: STORAGE_DOCUMENT_SUCCESS_UPLOAD,
    storageGeneratePresignedUrls: STORAGE_GEN_URL_UPLOAD,
    storageActiveUsingFiles: STORAGE_ACTIVE_USING_FILE,
  },

  /** GUEST */
  guestChat: {
    chatConversationList: CONVERSATION_LIST,
    chatConversationDetail: CONVERSATION_DETAIL,
    chatConversationCheckDetail: CONVERSATION_CHECK_DETAIL,
    chatConversationDelete: CONVERSATION_DELETE,
    chatMessageList: CONVERSATION_GET_MESSAGE,
    chatMessageAdd: CONVERSATION_SEND_MESSAGE,
    chatMessageUpdateReaction: CONVERSATION_REACTION_MESSAGE,
    officeListEmployeeOfOrgChart: CONVERSATION_GET_USER,
    officeListEmployeeOfOrgChartDetail: CONVERSATION_GET_USER_DETAIL,
    officeEmployeeFullOrgChartList: CONVERSATION_GET_USER_FULL_ORG_CHART,
    chatGroupAdd: CONVERSATION_GROUP_CREATE,
    chatGroupEdit: CONVERSATION_GROUP_EDIT,
    chatMessageUpdateRead: CONVERSATION_READ_MESSAGE,
    chatConversationLeave: CONVERSATION_LEAVE,
    chatSearch: CONVERSATION_SEARCH_MESSAGE,
    chatMessageEdit: CONVERSATION_EDIT_MESSAGE,
  }
}
